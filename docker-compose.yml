version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: enterprise-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: enterprise_app_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - enterprise-network

  # Redis (Optional - for session storage and caching)
  redis:
    image: redis:7.2-alpine
    container_name: enterprise-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - enterprise-network

  # Node.js Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: enterprise-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/enterprise_app_db?authSource=admin
      - JWT_SECRET=your_super_secret_jwt_key_change_this_in_production
      - JWT_EXPIRES_IN=7d
      - JWT_REFRESH_SECRET=your_refresh_token_secret_change_this_in_production
      - JWT_REFRESH_EXPIRES_IN=30d
      - CORS_ORIGIN=http://localhost:3000,http://127.0.0.1:3000
      - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - enterprise-network

  # MongoDB Express (Database Administration UI)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: enterprise-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - enterprise-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  enterprise-network:
    driver: bridge